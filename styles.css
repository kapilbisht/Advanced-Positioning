/*
Advance Positioning

The CSS position property lets you alter the positioning scheme of a particular element.
Its default value, as you might imagine, is static.
When an element’s position property doesn’t have a value of static, it’s called a “positioned element”.
It’s possible to mix-and-match different positioning schemes.
*/

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  height: 1200px;
}

.container {
  display: flex;
  justify-content: center;
}

.example {
  display: flex;
  justify-content: space-around;

  width: 800px;
  margin: 50px 0;
  background-color: #D6E9FE;
}

.item img {
  display: block;
}

/*
Relative Positioning
“Relative positioning” moves elements around relative to where they would normally appear in the static flow of the page.
This is useful for nudging boxes around when the default flow is just a little bit off.

The top and left properties measure from the original box’s top and left edges, respectively.
We can offset relative to the other edges with the bottom and right properties.
*/
.item-relative {
  position: relative;
  bottom: 30px;
  right: 30px;
}


/*
Absolute Positioning
“Absolute positioning” is just like relative positioning,
but the offset is relative to the entire browser window instead of the original position of the element.
Since there’s no longer any relationship with the static flow of the page,
consider this the most manual way to lay out an element.

*/
.item-absolute{
  position: absolute;
  top: 10px;
  left: 10px;
}

/*
(Relatively) Absolute Positioning
Absolute positioning becomes much more practical when it’s relative to some other element that is in the static flow of the page.

Coordinates for absolute elements are always relative to the closest container that is a positioned element.
It only falls back to being relative to the browser when none of its ancestors are positioned.
So, if we change .item-absolute’s parent element to be relatively positioned,
it should appear in the top-left corner of that element instead of the browser window.
*/
.absolute{
  position: relative;
}

/*
Fixed Positioning
“Fixed positioning” has a lot in common with absolute positioning: it’s very manual,
the element is removed from the normal flow of the page,
and the coordinate system is relative to the entire browser window.
The key difference is that fixed elements don’t scroll with the rest of the page.
*/
.item-fixed {
  position: fixed;
  bottom: 0;
  right: 0;
}
